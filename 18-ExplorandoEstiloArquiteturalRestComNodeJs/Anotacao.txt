* Criação de microsserviço para autenticação de usuário.
* Aplicação cliente: terceiros, celulares, brownser

==> CRUD de Usuários
* GET / users
* GET / users/:uuid
* POST / users
* PUT /users/:uuid
* DELETE /users/:uuid

==> Autenticação
* POST /token
* POST /token/validate

==> instalar typescript globalmente
npm install -g typescript

==> Criar typescript
tsc --init

==> Instalar typescript em save dev
$ npm install --save-dev typescript

==> Instalar types do node como dev
$ npm install --save-dev @types/node

==> Adicionar script no package.json
"build": "tsc -p ."

==>
elephant sul 

eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNjQ0Nzg2NDU5LCJzdWIiOiJkMjA3YzdjOC01OTY1LTQ2ODQtOGZkMi1jYWEzMmMxNTA2YjgifQ.0wqAF9ye7ErR0XS83XM4l82CTG65dv4HBNv6qvxOqBI



// Todas as tomadas, cada uma ocupa 1 espaço da tomada anterior
const lines = "6 6 6 6";

// Portanto, o resultado será somente a soma de todas as tomadas menos 3, 
// que é quantidade de tomadas anteriores que existem
const result =
  lines.split(" ").reduce((ac, item) => Number(ac) + Number(item)) - 3;

// Então mostramos o resultado no console
console.log(result);